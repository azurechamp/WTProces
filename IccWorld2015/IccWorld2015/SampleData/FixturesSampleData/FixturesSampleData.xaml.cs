//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.FixturesSampleData
{
	using System; 
	using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class FixturesSampleData { }
#else

	public class FixturesSampleData : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public FixturesSampleData()
		{
			try
			{
				Uri resourceUri = new Uri("/IccWorld2015;component/SampleData/FixturesSampleData/FixturesSampleData.xaml", UriKind.RelativeOrAbsolute);
				System.Windows.Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private ItemCollection _Collection = new ItemCollection();

		public ItemCollection Collection
		{
			get
			{
				return this._Collection;
			}
		}
	}

	public class Item : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Match = string.Empty;

		public string Match
		{
			get
			{
				return this._Match;
			}

			set
			{
				if (this._Match != value)
				{
					this._Match = value;
					this.OnPropertyChanged("Match");
				}
			}
		}

		private string _Team1 = string.Empty;

		public string Team1
		{
			get
			{
				return this._Team1;
			}

			set
			{
				if (this._Team1 != value)
				{
					this._Team1 = value;
					this.OnPropertyChanged("Team1");
				}
			}
		}

		private string _Team2 = string.Empty;

		public string Team2
		{
			get
			{
				return this._Team2;
			}

			set
			{
				if (this._Team2 != value)
				{
					this._Team2 = value;
					this.OnPropertyChanged("Team2");
				}
			}
		}

		private string _Venue = string.Empty;

		public string Venue
		{
			get
			{
				return this._Venue;
			}

			set
			{
				if (this._Venue != value)
				{
					this._Venue = value;
					this.OnPropertyChanged("Venue");
				}
			}
		}

		private string _Type = string.Empty;

		public string Type
		{
			get
			{
				return this._Type;
			}

			set
			{
				if (this._Type != value)
				{
					this._Type = value;
					this.OnPropertyChanged("Type");
				}
			}
		}

		private string _Date = string.Empty;

		public string Date
		{
			get
			{
				return this._Date;
			}

			set
			{
				if (this._Date != value)
				{
					this._Date = value;
					this.OnPropertyChanged("Date");
				}
			}
		}
	}

	public class ItemCollection : System.Collections.ObjectModel.ObservableCollection<Item>
	{ 
	}
#endif
}
